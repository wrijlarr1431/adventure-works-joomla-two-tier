AWSTemplateFormatVersion: '2010-09-09'
Description: 'Adventure Works - Stack 1 (VPC, Subnets, Routing, SGs, RDS MySQL)'

Parameters:
  VpcCidr:
    Type: String
    Default: 10.20.0.0/16
    Description: CIDR for the VPC
  PublicSubnet1Cidr:
    Type: String
    Default: 10.20.0.0/24
  PublicSubnet2Cidr:
    Type: String
    Default: 10.20.1.0/24
  PrivateSubnet1Cidr:
    Type: String
    Default: 10.20.10.0/24
  PrivateSubnet2Cidr:
    Type: String
    Default: 10.20.11.0/24

  DBName:
    Type: String
    Default: adventureworks
  DBMasterUsername:
    Type: String
    Default: joomla_admin
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9_]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBMasterPassword:
    Type: String
    NoEcho: true
    MinLength: 12
    Description: Master password for RDS
  DBInstanceClass:
    Type: String
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
  DBAllocatedStorage:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 65536
  EngineVersion:
    Type: String
    Default: '8.0.36'
  BackupRetentionPeriod:
    Type: Number
    Default: 7
  AllowedSshCidr:
    Type: String
    Default: 0.0.0.0/0

Mappings:
  RegionMap:
    # You may use this for AZ indexing consistently. Not strictly required.
    us-east-1:
      AZ1: "a"
      AZ2: "b"
    us-east-2:
      AZ1: "a"
      AZ2: "b"
    us-west-2:
      AZ1: "a"
      AZ2: "b"

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: aw-joomla-vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: aw-igw

  VpcIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Sub "${AWS::Region}a"
      Tags:
        - Key: Name
          Value: aw-public-subnet-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Sub "${AWS::Region}b"
      Tags:
        - Key: Name
          Value: aw-public-subnet-2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PrivateSubnet1Cidr
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Sub "${AWS::Region}a"
      Tags:
        - Key: Name
          Value: aw-private-subnet-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PrivateSubnet2Cidr
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Sub "${AWS::Region}b"
      Tags:
        - Key: Name
          Value: aw-private-subnet-2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: aw-public-rt

  PublicDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
    DependsOn: VpcIgwAttachment

  PublicSubnet1RtAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RtAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: aw-private-rt

  PrivateSubnet1RtAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RtAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web SG - HTTP/SSH from allowed sources
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - Description: HTTP from anywhere
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - Description: SSH from allowed CIDR
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AllowedSshCidr
      Tags:
        - Key: Name
          Value: aw-web-sg

  DbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DB SG - MySQL from Web SG only
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - Description: MySQL from web tier
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebSecurityGroup
      Tags:
        - Key: Name
          Value: aw-db-sg

  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS in private subnets
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      DBSubnetGroupName: aw-db-subnet-group

  MySqlRdsInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: aw-joomla-db
      Engine: mysql
      EngineVersion: !Ref EngineVersion
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterPassword
      DBName: !Ref DBName
      AllocatedStorage: !Ref DBAllocatedStorage
      StorageType: gp3
      MultiAZ: false                # Set true for production HA
      PubliclyAccessible: false
      VPCSecurityGroups:
        - !Ref DbSecurityGroup
      DBSubnetGroupName: !Ref DbSubnetGroup
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      DeletionProtection: false     # Consider true in production
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      StorageEncrypted: true
      DBInstanceClass: !Ref DBInstanceClass
      EnablePerformanceInsights: false
    DeletionPolicy: Snapshot         # Protect data on stack delete

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref Vpc
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'

  PublicSubnetIds:
    Description: Public subnet IDs (comma-separated)
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetIds'

  PrivateSubnetIds:
    Description: Private subnet IDs (comma-separated)
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetIds'

  WebSecurityGroupId:
    Description: Web tier Security Group ID
    Value: !Ref WebSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-WebSG'

  DbSecurityGroupId:
    Description: DB tier Security Group ID
    Value: !Ref DbSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-DbSG'

  RdsEndpoint:
    Description: RDS endpoint address
    Value: !GetAtt MySqlRdsInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-RdsEndpoint'